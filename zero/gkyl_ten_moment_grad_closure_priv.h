#pragma once

// Private header for ten_moment_grad_closure updater, not for direct use in user code.

#include <gkyl_ten_moment_grad_closure.h>
#include <math.h>

static const unsigned Q111 = 0;
static const unsigned Q112 = 1;
static const unsigned Q113 = 2;
static const unsigned Q122 = 3;
static const unsigned Q123 = 4;
static const unsigned Q133 = 5;
static const unsigned Q222 = 6;
static const unsigned Q223 = 7;
static const unsigned Q233 = 8;
static const unsigned Q333 = 9;

void
b_unit_vec(double Bx, double By, double Bz, double epsilon, double tau1[3], double tau2[3], double b[3])
{
  double Bmag = sqrt(Bx*Bx + By*By + Bz*Bz);
  b[0] = Bx/Bmag;
  b[1] = By/Bmag;
  b[2] = Bz/Bmag;
  if (fabs(Bz - Bmag) < epsilon) {
    tau1[0] = 0.0;
    tau1[1] = -Bz/Bmag;
    tau1[2] = By/Bmag;
    tau2[0] = (By*By + Bz*Bz)/Bmag;
    tau2[1] = -By*Bx/Bmag;
    tau2[2] = -Bz*Bx/Bmag;
   } else {
    tau1[0] = -By/Bmag;
    tau1[1] = Bx/Bmag;
    tau1[2] = 0.0;
    tau2[0] = -Bx*Bz/Bmag;
    tau2[1] = -By*Bz/Bmag;
    tau2[2] = (Bx*Bx + By*By)/Bmag;
  }
}

void
rotate_source(double in[10], double out[10], double e1[3], double e2[3], double e3[3], double tau1[3], double tau2[3], double tau3[3])
{
  double R11 = tau1[0]*e1[0] + tau1[1]*e1[1] + tau1[2]*e1[2];
  double R12 = tau1[0]*e2[0] + tau1[1]*e2[1] + tau1[2]*e2[2];
  double R13 = tau1[0]*e3[0] + tau1[1]*e3[1] + tau1[2]*e3[2];
  double R21 = tau2[0]*e1[0] + tau2[1]*e1[1] + tau2[2]*e1[2];
  double R22 = tau2[0]*e2[0] + tau2[1]*e2[1] + tau2[2]*e2[2];
  double R23 = tau2[0]*e3[0] + tau2[1]*e3[1] + tau2[2]*e3[2];
  double R31 = tau3[0]*e1[0] + tau3[1]*e1[1] + tau3[2]*e1[2];
  double R32 = tau3[0]*e2[0] + tau3[1]*e2[1] + tau3[2]*e2[2];
  double R33 = tau3[0]*e3[0] + tau3[1]*e3[1] + tau3[2]*e3[2];
  
  out[Q111] = in[Q111]*R11*R11*R11 + in[Q222]*R12*R12*R12 + in[Q333]*R13*R13*R13 + 3.0*in[Q112]*R11*R11*R12 + 3.0*in[Q113]*R11*R11*R13 + 3.0*in[Q122]*R12*R12*R11 + 3.0*in[Q223]*R12*R21*R13 + 3.0*in[Q233]*R13*R13*R12 + 3.0*in[Q133]*R13*R13*R11 + 6.0*in[Q123]*R11*R12*R13;
  out[Q112] = in[Q111]*R11*R11*R21 + in[Q222]*R12*R12*R22 + in[Q333]*R13*R13*R23 + in[Q112]*(2.0*R11*R12*R21 + R11*R11*R22) + in[Q113]*(2.0*R11*R13*R21 + R11*R11*R23) + in[Q122]*(2.0*R12*R11*R22 + R12*R12*R21) + in[Q223]*(2.0*R12*R13*R22 + R12*R12*R23) + in[Q233]*(2.0*R13*R12*R23 + R13*R13*R22) + in[Q133]*(2.0*R13*R11*R23 + R13*R13*R21) + in[Q123]*(2.0*R11*R12*R23 + 2.0*R13*R12*R21 + 2.0*R11*R13*R22);
  out[Q113] = in[Q111]*R11*R11*R31 + in[Q222]*R12*R12*R32 + in[Q333]*R13*R13*R33 + in[Q112]*(2.0*R11*R31*R12 + R11*R11*R32) + in[Q113]*(2.0*R11*R31*R13 + R11*R11*R33) + in[Q122]*(2.0*R12*R32*R11 + R12*R12*R31) + in[Q223]*(2.0*R12*R32*R13 + R12*R12*R33) + in[Q233]*(2.0*R13*R33*R12 + R13*R13*R32) + in[Q133]*(2.0*R13*R33*R11 + R13*R13*R31) + in[Q123]*(2.0*R11*R12*R33 + 2.0*R13*R12*R31 + 2.0*R11*R13*R32);
  out[Q122] = in[Q111]*R11*R21*R21 + in[Q222]*R12*R22*R22 + in[Q333]*R13*R23*R23 + in[Q112]*(2.0*R11*R21*R22 + R21*R21*R12) + in[Q113]*(2.0*R11*R21*R23 + R21*R21*R13) + in[Q122]*(2.0*R12*R22*R21 + R22*R22*R11) + in[Q223]*(2.0*R12*R22*R23 + R22*R22*R13) + in[Q233]*(2.0*R13*R23*R22 + R23*R23*R12) + in[Q133]*(2.0*R13*R23*R21 + R23*R23*R11) + in[Q123]*(2.0*R11*R22*R23 + 2.0*R13*R22*R21 + 2.0*R12*R23*R21);
  out[Q123] = in[Q111]*R11*R21*R31 + in[Q222]*R12*R22*R32 + in[Q333]*R13*R23*R33 + in[Q112]*(R11*R21*R32 + R12*R21*R31 + R11*R22*R31) + in[Q113]*(R11*R21*R33 + R13*R21*R31 + R11*R23*R31) + in[Q122]*(R11*R22*R32 + R12*R22*R31 + R21*R32*R12) + in[Q123]*(R11*R22*R33 + R11*R23*R32 + R12*R23*R31 + R12*R21*R33 + R13*R21*R32 + R13*R22*R31) + in[Q133]*(R11*R23*R33 + R13*R21*R33 + R13*R23*R31) + in[Q223]*(R12*R22*R33 + R12*R23*R32 + R13*R22*R32) + in[Q233]*(R12*R23*R33 + R13*R22*R33 + R13*R23*R32);
  out[Q133] = in[Q111]*R11*R31*R31 + in[Q222]*R12*R32*R32 + in[Q333]*R13*R33*R33 + in[Q112]*(2.0*R11*R31*R32 + R31*R31*R12) + in[Q113]*(2.0*R11*R31*R33 + R31*R31*R13) + in[Q122]*(2.0*R12*R32*R31 + R32*R32*R11) + in[Q223]*(2.0*R12*R32*R33 + R32*R32*R13) + in[Q233]*(2.0*R13*R33*R32 + R33*R33*R12) + in[Q133]*(2.0*R13*R33*R31 + R33*R33*R11) + in[Q123]*(2.0*R11*R32*R33 + 2.0*R13*R32*R31 + 2.0*R12*R33*R31);
  out[Q222] = in[Q111]*R21*R21*R21 + in[Q222]*R22*R22*R22 + in[Q333]*R23*R23*R23 + 3.0*in[Q112]*R21*R21*R22 + 3.0*in[Q113]*R21*R21*R23 + 3.0*in[Q122]*R22*R22*R21 + 3.0*in[Q223]*R22*R22*R23 + 3.0*in[Q233]*R23*R23*R22 + 3.0*in[Q133]*R23*R23*R21 + 6.0*in[Q123]*R21*R22*R23;
  out[Q223] = in[Q111]*R31*R21*R21 + in[Q222]*R32*R22*R22 + in[Q333]*R33*R23*R23 + in[Q112]*(2.0*R31*R21*R22 + R21*R21*R32) + in[Q113]*(2.0*R31*R21*R23 + R21*R21*R33) + in[Q122]*(2.0*R32*R22*R21 + R22*R22*R31) + in[Q223]*(2.0*R32*R22*R23 + R22*R22*R33) + in[Q233]*(2.0*R33*R23*R22 + R23*R23*R32) + in[Q133]*(2.0*R33*R23*R21 + R23*R23*R31) + in[Q123]*(2.0*R31*R22*R23 + 2.0*R33*R22*R21 + 2.0*R32*R22*R21);
  out[Q233] = in[Q111]*R21*R31*R31 + in[Q222]*R22*R32*R32 + in[Q333]*R23*R33*R33 + in[Q112]*(2.0*R21*R31*R32 + R31*R31*R22) + in[Q113]*(2.0*R21*R31*R33 + R31*R31*R23) + in[Q122]*(2.0*R22*R32*R31 + R32*R32*R21) + in[Q223]*(2.0*R22*R32*R33 + R32*R32*R23) + in[Q233]*(2.0*R23*R33*R32 + R33*R33*R22) + in[Q133]*(2.0*R23*R33*R31 + R33*R33*R21) + in[Q123]*(2.0*R21*R32*R33 + 2.0*R23*R32*R31 + 2.0*R22*R33*R31);
  out[Q333] = in[Q111]*R31*R31*R31 + in[Q222]*R32*R32*R32 + in[Q333]*R33*R33*R33 + 3.0*in[Q112]*R31*R31*R32 + 3.0*in[Q113]*R31*R31*R33 + 3.0*in[Q122]*R32*R32*R31 + 3.0*in[Q223]*R32*R32*R33 + 3.0*in[Q233]*R33*R33*R32 + 3.0*in[Q133]*R33*R33*R31 + 6.0*in[Q123]*R31*R32*R33;
}

void
anisotropic_diffusion(double b, double rhs[10], double out[10])
{
  double b2 = b*b;
  double b3 = b*b2;
  double b4 = b*b3;

  double d1 = 9.0*b4 + 10.0*b2 + 1.0;
  double d2 = 4.0*b2 + 1.0;
  double d3 = b2 + 1.0;
  out[Q111] = ((6.0*rhs[6] + 9.0*rhs[1])*b3 + (6.0*rhs[3] + 7.0*rhs[0])*b2 + 3.0*rhs[1] + rhs[0])/d1;
  out[Q112] = (-3.0*rhs[0]*b3 + (2.0*rhs[6] + 3.0*rhs[1])*b2 - (rhs[0] - 2.0*rhs[3])*b + rhs[1])/d1;
  out[Q113] = ((2.0*rhs[7] + 2.0*rhs[2])*b2 + 2.0*rhs[4]*b + rhs[2])/d2;
  out[Q122] = (3.0*rhs[6]*b3 + (3.0*rhs[3] + 2.0*rhs[0])*b2 + (rhs[6] - 2.0*rhs[1])*b + rhs[3])/d1;
  out[Q123] = ((rhs[7] - rhs[2])*b + rhs[4])/d2;
  out[Q133] = (rhs[8]*b + rhs[5])/d3;
  out[Q222] = (-(9.0*rhs[3] + 6.0*rhs[0])*b3 + (7.0*rhs[6] + 6.0*rhs[1])*b2 - 3.0*rhs[3]*b + rhs[6])/d1;
  out[Q223] = ((2.0*rhs[7] + 2.0*rhs[2])*b2 - 2.0*rhs[4]*b + rhs[7])/d2;
  out[Q233] = (-rhs[5]*b + rhs[8])/d3;
  out[Q333] = rhs[9];
}

void
anisotropic_diffusion_kernel(double w, double Bx, double By, double Bz, double qRhs[10], double qOut[10])
{
  double bx = 0.0;
  double by = 0.0;
  double bz = 0.0;
  double Bmag = sqrt(Bx*Bx + By*By + Bz*Bz);
  if (Bmag > 0.0) {
    bx = w*Bx/Bmag;
    by = w*By/Bmag;
    bz = w*Bz/Bmag;
  }

  double bx2 = bx*bx;
  double bx3 = bx*bx2;
  double bx4 = bx*bx3;
  double bx5 = bx*bx4;
  double bx6 = bx*bx5;
  double by2 = by*by;
  double by3 = by*by2;
  double by4 = by*by3;
  double by5 = by*by4;
  double by6 = by*by5;
  double bz2 = bz*bz;
  double bz3 = bz*bz2;
  double bz4 = bz*bz3;
  double bz5 = bz*bz4;
  double bz6 = bz*bz5;

  double d = 36*bz6 + (108*by2 + 108*bx2 + 49)*bz4 + (108*by4 + (216*bx2 + 98)*by2 + 108*bx4 + 98*bx2 + 14)*bz2 + 36*by6 + (108*bx2 + 49)*by4 + (108*bx4 + 98*bx2 + 14)*by2 + 36*bx6 + 49*bx4 + 14*bx2 + 1;

  qOut[0] = (54*qRhs[7]*bx*bz*bz4 + 54*qRhs[2]*bx*bz*bz4 + 24*qRhs[6]*bz*bz4 + 36*qRhs[1]*bz*bz4 - 108*qRhs[8]*bx*by*bz4 + 54*qRhs[6]*bx*by*bz4 + 54*qRhs[1]*bx*by*bz4 - 72*qRhs[7]*by*bz4 - 36*qRhs[2]*by*bz4 - 108*qRhs[5]*bx2*bz4 + 54*qRhs[3]*bx2*bz4 + 54*qRhs[0]*bx2*bz4 - 18*qRhs[4]*bx*bz4 + 24*qRhs[3]*bz4 + 28*qRhs[0]*bz4 + 54*qRhs[9]*bx*by2*bz3 - 54*qRhs[7]*bx*by2*bz3 + 108*qRhs[2]*bx*by2*bz3 + 72*qRhs[8]*by2*bz3 + 24*qRhs[6]*by2*bz3 + 72*qRhs[1]*by2*bz3 - 324*qRhs[4]*bx2*by*bz3 + 18*qRhs[5]*bx*by*bz3 - 18*qRhs[3]*bx*by*bz3 - 48*qRhs[4]*by*bz3 + 90*qRhs[9]*bx3*bz3 + 54*qRhs[7]*bx3*bz3 - 108*qRhs[2]*bx3*bz3 + 90*qRhs[8]*bx2*bz3 + 24*qRhs[6]*bx2*bz3 + 54*qRhs[1]*bx2*bz3 + 36*qRhs[7]*bx*bz3 + 3*qRhs[2]*bx*bz3 + 6*qRhs[6]*bz3 + 21*qRhs[1]*bz3 - 54*qRhs[8]*bx*by3*bz2 + 54*qRhs[6]*bx*by3*bz2 + 108*qRhs[1]*bx*by3*bz2 - 24*qRhs[9]*by3*bz2 - 72*qRhs[7]*by3*bz2 - 72*qRhs[2]*by3*bz2 - 54*qRhs[5]*bx2*by2*bz2 - 54*qRhs[3]*bx2*by2*bz2 + 108*qRhs[0]*bx2*by2*bz2 + 24*qRhs[5]*by2*bz2 + 24*qRhs[3]*by2*bz2 + 56*qRhs[0]*by2*bz2 + 162*qRhs[8]*bx3*by*bz2 + 54*qRhs[6]*bx3*by*bz2 - 108*qRhs[1]*bx3*by*bz2 - 90*qRhs[9]*bx2*by*bz2 + 108*qRhs[7]*bx2*by*bz2 - 54*qRhs[2]*bx2*by*bz2 - 72*qRhs[8]*bx*by*bz2 + 36*qRhs[6]*bx*by*bz2 + 3*qRhs[1]*bx*by*bz2 - 18*qRhs[7]*by*bz2 - 21*qRhs[2]*by*bz2 + 162*qRhs[5]*bx4*bz2 + 54*qRhs[3]*bx4*bz2 + 162*qRhs[4]*bx3*bz2 + 18*qRhs[5]*bx2*bz2 + 60*qRhs[3]*bx2*bz2 + 59*qRhs[0]*bx2*bz2 + 18*qRhs[4]*bx*bz2 + 6*qRhs[3]*bz2 + 11*qRhs[0]*bz2 + 54*qRhs[9]*bx*by4*bz - 108*qRhs[7]*bx*by4*bz + 54*qRhs[2]*bx*by4*bz + 72*qRhs[8]*by4*bz + 36*qRhs[1]*by4*bz - 324*qRhs[4]*bx2*by3*bz + 18*qRhs[5]*bx*by3*bz - 18*qRhs[3]*bx*by3*bz - 48*qRhs[4]*by3*bz + 54*qRhs[9]*bx3*by2*bz + 162*qRhs[7]*bx3*by2*bz - 108*qRhs[2]*bx3*by2*bz - 108*qRhs[8]*bx2*by2*bz + 90*qRhs[6]*bx2*by2*bz + 54*qRhs[1]*bx2*by2*bz + 36*qRhs[9]*bx*by2*bz - 72*qRhs[7]*bx*by2*bz + 3*qRhs[2]*bx*by2*bz + 18*qRhs[8]*by2*bz + 21*qRhs[1]*by2*bz + 216*qRhs[4]*bx4*by*bz - 162*qRhs[5]*bx3*by*bz + 162*qRhs[3]*bx3*by*bz - 84*qRhs[4]*bx2*by*bz - 18*qRhs[5]*bx*by*bz + 18*qRhs[3]*bx*by*bz - 12*qRhs[4]*by*bz + 108*qRhs[2]*bx*bx4*bz + 108*qRhs[1]*bx4*bz + 39*qRhs[2]*bx3*bz + 39*qRhs[1]*bx2*bz + 3*qRhs[2]*bx*bz + 3*qRhs[1]*bz + 54*qRhs[8]*bx*by*by4 + 54*qRhs[1]*bx*by*by4 - 24*qRhs[9]*by*by4 - 36*qRhs[2]*by*by4 + 54*qRhs[5]*bx2*by4 - 108*qRhs[3]*bx2*by4 + 54*qRhs[0]*bx2*by4 + 18*qRhs[4]*bx*by4 + 24*qRhs[5]*by4 + 28*qRhs[0]*by4 + 54*qRhs[8]*bx3*by3 + 90*qRhs[6]*bx3*by3 - 108*qRhs[1]*bx3*by3 - 24*qRhs[9]*bx2*by3 - 90*qRhs[7]*bx2*by3 - 54*qRhs[2]*bx2*by3 + 36*qRhs[8]*bx*by3 + 3*qRhs[1]*bx*by3 - 6*qRhs[9]*by3 - 21*qRhs[2]*by3 + 54*qRhs[5]*bx4*by2 + 162*qRhs[3]*bx4*by2 - 162*qRhs[4]*bx3*by2 + 60*qRhs[5]*bx2*by2 + 18*qRhs[3]*bx2*by2 + 59*qRhs[0]*bx2*by2 - 18*qRhs[4]*bx*by2 + 6*qRhs[5]*by2 + 11*qRhs[0]*by2 + 108*qRhs[1]*bx*bx4*by - 108*qRhs[2]*bx4*by + 39*qRhs[1]*bx3*by - 39*qRhs[2]*bx2*by + 3*qRhs[1]*bx*by - 3*qRhs[2]*by + 36*qRhs[0]*bx2*bx4 + 49*qRhs[0]*bx4 + 14*qRhs[0]*bx2 + qRhs[0])/d;
  qOut[1] = (18*qRhs[7]*by*bz*bz4 + 18*qRhs[2]*by*bz*bz4 - 12*qRhs[0]*bz*bz4 - 36*qRhs[8]*by2*bz4 + 18*qRhs[6]*by2*bz4 + 18*qRhs[1]*by2*bz4 - 36*qRhs[5]*bx*by*bz4 + 18*qRhs[3]*bx*by*bz4 + 18*qRhs[0]*bx*by*bz4 + 18*qRhs[4]*by*bz4 + 18*qRhs[7]*bx*bz4 + 18*qRhs[2]*bx*bz4 + 8*qRhs[6]*bz4 + 12*qRhs[1]*bz4 + 18*qRhs[9]*by3*bz3 - 18*qRhs[7]*by3*bz3 + 36*qRhs[2]*by3*bz3 - 108*qRhs[4]*bx*by2*bz3 - 18*qRhs[5]*by2*bz3 + 18*qRhs[3]*by2*bz3 - 24*qRhs[0]*by2*bz3 + 54*qRhs[9]*bx2*by*bz3 - 18*qRhs[7]*bx2*by*bz3 - 72*qRhs[2]*bx2*by*bz3 + 18*qRhs[8]*bx*by*bz3 - 6*qRhs[6]*bx*by*bz3 - 4*qRhs[7]*by*bz3 + 17*qRhs[2]*by*bz3 - 36*qRhs[5]*bx2*bz3 + 18*qRhs[3]*bx2*bz3 - 18*qRhs[0]*bx2*bz3 - 6*qRhs[4]*bx*bz3 + 8*qRhs[3]*bz3 - 7*qRhs[0]*bz3 - 18*qRhs[8]*by4*bz2 + 18*qRhs[6]*by4*bz2 + 36*qRhs[1]*by4*bz2 - 18*qRhs[5]*bx*by3*bz2 - 18*qRhs[3]*bx*by3*bz2 + 36*qRhs[0]*bx*by3*bz2 + 198*qRhs[8]*bx2*by2*bz2 - 18*qRhs[6]*bx2*by2*bz2 - 72*qRhs[1]*bx2*by2*bz2 - 36*qRhs[9]*bx*by2*bz2 + 144*qRhs[7]*bx*by2*bz2 + 36*qRhs[2]*bx*by2*bz2 - 16*qRhs[8]*by2*bz2 + 20*qRhs[6]*by2*bz2 + 41*qRhs[1]*by2*bz2 + 198*qRhs[5]*bx3*by*bz2 - 18*qRhs[3]*bx3*by*bz2 - 36*qRhs[0]*bx3*by*bz2 + 54*qRhs[4]*bx2*by*bz2 + 20*qRhs[5]*bx*by*bz2 - 10*qRhs[3]*bx*by*bz2 + qRhs[0]*bx*by*bz2 + 4*qRhs[4]*by*bz2 + 30*qRhs[9]*bx3*bz2 + 18*qRhs[7]*bx3*bz2 - 36*qRhs[2]*bx3*bz2 + 30*qRhs[8]*bx2*bz2 + 8*qRhs[6]*bx2*bz2 + 18*qRhs[1]*bx2*bz2 + 12*qRhs[7]*bx*bz2 + qRhs[2]*bx*bz2 + 2*qRhs[6]*bz2 + 7*qRhs[1]*bz2 + 18*qRhs[9]*by*by4*bz - 36*qRhs[7]*by*by4*bz + 18*qRhs[2]*by*by4*bz - 108*qRhs[4]*bx*by4*bz - 18*qRhs[5]*by4*bz + 18*qRhs[3]*by4*bz - 12*qRhs[0]*by4*bz - 18*qRhs[9]*bx2*by3*bz + 198*qRhs[7]*bx2*by3*bz - 72*qRhs[2]*bx2*by3*bz - 162*qRhs[8]*bx*by3*bz + 54*qRhs[6]*bx*by3*bz + 12*qRhs[9]*by3*bz - 40*qRhs[7]*by3*bz + 17*qRhs[2]*by3*bz + 432*qRhs[4]*bx3*by2*bz - 144*qRhs[5]*bx2*by2*bz + 126*qRhs[3]*bx2*by2*bz - 18*qRhs[0]*bx2*by2*bz + 42*qRhs[4]*bx*by2*bz - 12*qRhs[5]*by2*bz + 20*qRhs[3]*by2*bz - 7*qRhs[0]*by2*bz - 36*qRhs[9]*bx4*by*bz - 36*qRhs[7]*bx4*by*bz + 180*qRhs[2]*bx4*by*bz + 18*qRhs[8]*bx3*by*bz - 6*qRhs[6]*bx3*by*bz - 24*qRhs[9]*bx2*by*bz + 20*qRhs[7]*bx2*by*bz + 65*qRhs[2]*bx2*by*bz - 18*qRhs[8]*bx*by*bz + 6*qRhs[6]*bx*by*bz - 4*qRhs[7]*by*bz + 5*qRhs[2]*by*bz + 54*qRhs[5]*bx4*bz + 18*qRhs[3]*bx4*bz - 36*qRhs[0]*bx4*bz + 54*qRhs[4]*bx3*bz + 6*qRhs[5]*bx2*bz + 20*qRhs[3]*bx2*bz - 13*qRhs[0]*bx2*bz + 6*qRhs[4]*bx*bz + 2*qRhs[3]*bz - qRhs[0]*bz + 18*qRhs[8]*by2*by4 + 18*qRhs[1]*by2*by4 + 18*qRhs[5]*bx*by*by4 - 36*qRhs[3]*bx*by*by4 + 18*qRhs[0]*bx*by*by4 - 18*qRhs[4]*by*by4 - 18*qRhs[8]*bx2*by4 + 54*qRhs[6]*bx2*by4 - 72*qRhs[1]*bx2*by4 + 24*qRhs[9]*bx*by4 - 54*qRhs[7]*bx*by4 + 18*qRhs[2]*bx*by4 + 20*qRhs[8]*by4 + 29*qRhs[1]*by4 - 18*qRhs[5]*bx3*by3 + 198*qRhs[3]*bx3*by3 - 36*qRhs[0]*bx3*by3 - 162*qRhs[4]*bx2*by3 - 4*qRhs[5]*bx*by3 + 14*qRhs[3]*bx*by3 + qRhs[0]*bx*by3 - 20*qRhs[4]*by3 - 36*qRhs[8]*bx4*by2 - 36*qRhs[6]*bx4*by2 + 180*qRhs[1]*bx4*by2 + 24*qRhs[9]*bx3*by2 + 36*qRhs[7]*bx3*by2 - 36*qRhs[2]*bx3*by2 - 16*qRhs[8]*bx2*by2 + 6*qRhs[6]*bx2*by2 + 83*qRhs[1]*bx2*by2 + 6*qRhs[9]*bx*by2 - 6*qRhs[7]*bx*by2 + qRhs[2]*bx*by2 + 2*qRhs[8]*by2 + 12*qRhs[1]*by2 - 36*qRhs[5]*bx*bx4*by - 36*qRhs[3]*bx*bx4*by + 36*qRhs[0]*bx*bx4*by + 36*qRhs[4]*bx4*by - 40*qRhs[5]*bx3*by + 14*qRhs[3]*bx3*by + 13*qRhs[0]*bx3*by - 14*qRhs[4]*bx2*by - 4*qRhs[5]*bx*by + 2*qRhs[3]*bx*by + qRhs[0]*bx*by - 2*qRhs[4]*by + 36*qRhs[2]*bx*bx4 + 36*qRhs[1]*bx4 + 13*qRhs[2]*bx3 + 13*qRhs[1]*bx2 + qRhs[2]*bx + qRhs[1])/d;
  qOut[2] = (18*qRhs[7]*bz2*bz4 + 18*qRhs[2]*bz2*bz4 - 36*qRhs[8]*by*bz*bz4 + 18*qRhs[6]*by*bz*bz4 + 18*qRhs[1]*by*bz*bz4 - 36*qRhs[5]*bx*bz*bz4 + 18*qRhs[3]*bx*bz*bz4 + 18*qRhs[0]*bx*bz*bz4 + 18*qRhs[4]*bz*bz4 + 18*qRhs[9]*by2*bz4 - 18*qRhs[7]*by2*bz4 + 36*qRhs[2]*by2*bz4 - 108*qRhs[4]*bx*by*bz4 - 18*qRhs[5]*by*bz4 + 18*qRhs[3]*by*bz4 + 12*qRhs[0]*by*bz4 + 54*qRhs[9]*bx2*bz4 - 18*qRhs[7]*bx2*bz4-72*qRhs[2]*bx2*bz4+54*qRhs[8]*bx*bz4-24*qRhs[6]*bx*bz4-18*qRhs[1]*bx*bz4+20*qRhs[7]*bz4+29*qRhs[2]*bz4-18*qRhs[8]*by3*bz3+18*qRhs[6]*by3*bz3+36*qRhs[1]*by3*bz3-18*qRhs[5]*bx*by2*bz3-18*qRhs[3]*bx*by2*bz3+36*qRhs[0]*bx*by2*bz3+198*qRhs[8]*bx2*by*bz3-18*qRhs[6]*bx2*by*bz3-72*qRhs[1]*bx2*by*bz3-54*qRhs[9]*bx*by*bz3+162*qRhs[7]*bx*by*bz3-40*qRhs[8]*by*bz3+12*qRhs[6]*by*bz3+17*qRhs[1]*by*bz3+198*qRhs[5]*bx3*bz3-18*qRhs[3]*bx3*bz3-36*qRhs[0]*bx3*bz3+162*qRhs[4]*bx2*bz3+14*qRhs[5]*bx*bz3-4*qRhs[3]*bx*bz3+qRhs[0]*bx*bz3+20*qRhs[4]*bz3+18*qRhs[9]*by4*bz2-36*qRhs[7]*by4*bz2+18*qRhs[2]*by4*bz2-108*qRhs[4]*bx*by3*bz2-18*qRhs[5]*by3*bz2+18*qRhs[3]*by3*bz2+24*qRhs[0]*by3*bz2-18*qRhs[9]*bx2*by2*bz2+198*qRhs[7]*bx2*by2*bz2-72*qRhs[2]*bx2*by2*bz2-144*qRhs[8]*bx*by2*bz2+36*qRhs[6]*bx*by2*bz2-36*qRhs[1]*bx*by2*bz2+20*qRhs[9]*by2*bz2-16*qRhs[7]*by2*bz2+41*qRhs[2]*by2*bz2+432*qRhs[4]*bx3*by*bz2-126*qRhs[5]*bx2*by*bz2+144*qRhs[3]*bx2*by*bz2+18*qRhs[0]*bx2*by*bz2+42*qRhs[4]*bx*by*bz2-20*qRhs[5]*by*bz2+12*qRhs[3]*by*bz2+7*qRhs[0]*by*bz2-36*qRhs[9]*bx4*bz2-36*qRhs[7]*bx4*bz2+180*qRhs[2]*bx4*bz2-36*qRhs[8]*bx3*bz2-24*qRhs[6]*bx3*bz2+36*qRhs[1]*bx3*bz2+6*qRhs[9]*bx2*bz2-16*qRhs[7]*bx2*bz2+83*qRhs[2]*bx2*bz2+6*qRhs[8]*bx*bz2-6*qRhs[6]*bx*bz2-qRhs[1]*bx*bz2+2*qRhs[7]*bz2+12*qRhs[2]*bz2+18*qRhs[8]*by*by4*bz+18*qRhs[1]*by*by4*bz+18*qRhs[5]*bx*by4*bz-36*qRhs[3]*bx*by4*bz+18*qRhs[0]*bx*by4*bz-18*qRhs[4]*by4*bz-18*qRhs[8]*bx2*by3*bz+54*qRhs[6]*bx2*by3*bz-72*qRhs[1]*bx2*by3*bz+6*qRhs[9]*bx*by3*bz-18*qRhs[7]*bx*by3*bz-4*qRhs[8]*by3*bz+17*qRhs[1]*by3*bz-18*qRhs[5]*bx3*by2*bz+198*qRhs[3]*bx3*by2*bz-36*qRhs[0]*bx3*by2*bz-54*qRhs[4]*bx2*by2*bz-10*qRhs[5]*bx*by2*bz+20*qRhs[3]*bx*by2*bz+qRhs[0]*bx*by2*bz-4*qRhs[4]*by2*bz-36*qRhs[8]*bx4*by*bz-36*qRhs[6]*bx4*by*bz+180*qRhs[1]*bx4*by*bz+6*qRhs[9]*bx3*by*bz-18*qRhs[7]*bx3*by*bz+20*qRhs[8]*bx2*by*bz-24*qRhs[6]*bx2*by*bz+65*qRhs[1]*bx2*by*bz-6*qRhs[9]*bx*by*bz+18*qRhs[7]*bx*by*bz-4*qRhs[8]*by*bz+5*qRhs[1]*by*bz-36*qRhs[5]*bx*bx4*bz-36*qRhs[3]*bx*bx4*bz+36*qRhs[0]*bx*bx4*bz-36*qRhs[4]*bx4*bz+14*qRhs[5]*bx3*bz-40*qRhs[3]*bx3*bz+13*qRhs[0]*bx3*bz+14*qRhs[4]*bx2*bz+2*qRhs[5]*bx*bz-4*qRhs[3]*bx*bz+qRhs[0]*bx*bz+2*qRhs[4]*bz+12*qRhs[0]*by*by4-18*qRhs[8]*bx*by4-18*qRhs[1]*bx*by4+8*qRhs[9]*by4+12*qRhs[2]*by4-18*qRhs[5]*bx2*by3+36*qRhs[3]*bx2*by3+18*qRhs[0]*bx2*by3-6*qRhs[4]*bx*by3-8*qRhs[5]*by3+7*qRhs[0]*by3-18*qRhs[8]*bx3*by2-30*qRhs[6]*bx3*by2+36*qRhs[1]*bx3*by2+8*qRhs[9]*bx2*by2+30*qRhs[7]*bx2*by2+18*qRhs[2]*bx2*by2-12*qRhs[8]*bx*by2-qRhs[1]*bx*by2+2*qRhs[9]*by2+7*qRhs[2]*by2-18*qRhs[5]*bx4*by-54*qRhs[3]*bx4*by+36*qRhs[0]*bx4*by+54*qRhs[4]*bx3*by-20*qRhs[5]*bx2*by-6*qRhs[3]*bx2*by+13*qRhs[0]*bx2*by+6*qRhs[4]*bx*by-2*qRhs[5]*by+qRhs[0]*by-36*qRhs[1]*bx*bx4+36*qRhs[2]*bx4-13*qRhs[1]*bx3+13*qRhs[2]*bx2-qRhs[1]*bx+qRhs[2])/d;
  qOut[3] = (18*qRhs[7]*bx*bz*bz4+18*qRhs[2]*bx*bz*bz4+12*qRhs[6]*bz*bz4-36*qRhs[8]*bx*by*bz4+18*qRhs[6]*bx*by*bz4+18*qRhs[1]*bx*by*bz4-18*qRhs[7]*by*bz4-18*qRhs[2]*by*bz4-36*qRhs[5]*bx2*bz4+18*qRhs[3]*bx2*bz4+18*qRhs[0]*bx2*bz4-18*qRhs[4]*bx*bz4+12*qRhs[3]*bz4+8*qRhs[0]*bz4+54*qRhs[9]*bx*by2*bz3-72*qRhs[7]*bx*by2*bz3-18*qRhs[2]*bx*by2*bz3+36*qRhs[8]*by2*bz3+18*qRhs[6]*by2*bz3-18*qRhs[1]*by2*bz3-108*qRhs[4]*bx2*by*bz3-18*qRhs[5]*bx*by*bz3+6*qRhs[0]*bx*by*bz3-6*qRhs[4]*by*bz3+18*qRhs[9]*bx3*bz3+36*qRhs[7]*bx3*bz3-18*qRhs[2]*bx3*bz3+18*qRhs[8]*bx2*bz3+24*qRhs[6]*bx2*bz3-18*qRhs[1]*bx2*bz3+17*qRhs[7]*bx*bz3-4*qRhs[2]*bx*bz3+7*qRhs[6]*bz3-8*qRhs[1]*bz3+198*qRhs[8]*bx*by3*bz2-36*qRhs[6]*bx*by3*bz2-18*qRhs[1]*bx*by3*bz2-30*qRhs[9]*by3*bz2+36*qRhs[7]*by3*bz2-18*qRhs[2]*by3*bz2+198*qRhs[5]*bx2*by2*bz2-72*qRhs[3]*bx2*by2*bz2-18*qRhs[0]*bx2*by2*bz2-54*qRhs[4]*bx*by2*bz2+30*qRhs[5]*by2*bz2+18*qRhs[3]*by2*bz2+8*qRhs[0]*by2*bz2-18*qRhs[8]*bx3*by*bz2+36*qRhs[6]*bx3*by*bz2-18*qRhs[1]*bx3*by*bz2+36*qRhs[9]*bx2*by*bz2-36*qRhs[7]*bx2*by*bz2-144*qRhs[2]*bx2*by*bz2+20*qRhs[8]*bx*by*bz2+qRhs[6]*bx*by*bz2-10*qRhs[1]*bx*by*bz2-qRhs[7]*by*bz2-12*qRhs[2]*by*bz2-18*qRhs[5]*bx4*bz2+36*qRhs[3]*bx4*bz2+18*qRhs[0]*bx4*bz2-16*qRhs[5]*bx2*bz2+41*qRhs[3]*bx2*bz2+20*qRhs[0]*bx2*bz2-4*qRhs[4]*bx*bz2+7*qRhs[3]*bz2+2*qRhs[0]*bz2-36*qRhs[9]*bx*by4*bz+180*qRhs[7]*bx*by4*bz-36*qRhs[2]*bx*by4*bz-54*qRhs[8]*by4*bz+36*qRhs[6]*by4*bz-18*qRhs[1]*by4*bz+432*qRhs[4]*bx2*by3*bz-18*qRhs[5]*bx*by3*bz+6*qRhs[0]*bx*by3*bz+54*qRhs[4]*by3*bz-18*qRhs[9]*bx3*by2*bz-72*qRhs[7]*bx3*by2*bz+198*qRhs[2]*bx3*by2*bz+144*qRhs[8]*bx2*by2*bz+18*qRhs[6]*bx2*by2*bz-126*qRhs[1]*bx2*by2*bz-24*qRhs[9]*bx*by2*bz+65*qRhs[7]*bx*by2*bz+20*qRhs[2]*bx*by2*bz-6*qRhs[8]*by2*bz+13*qRhs[6]*by2*bz-20*qRhs[1]*by2*bz-108*qRhs[4]*bx4*by*bz+162*qRhs[5]*bx3*by*bz-54*qRhs[0]*bx3*by*bz+42*qRhs[4]*bx2*by*bz+18*qRhs[5]*bx*by*bz-6*qRhs[0]*bx*by*bz+6*qRhs[4]*by*bz+18*qRhs[9]*bx*bx4*bz+18*qRhs[7]*bx*bx4*bz-36*qRhs[2]*bx*bx4*bz+18*qRhs[8]*bx4*bz+12*qRhs[6]*bx4*bz-18*qRhs[1]*bx4*bz+12*qRhs[9]*bx3*bz+17*qRhs[7]*bx3*bz-40*qRhs[2]*bx3*bz+12*qRhs[8]*bx2*bz+7*qRhs[6]*bx2*bz-20*qRhs[1]*bx2*bz+5*qRhs[7]*bx*bz-4*qRhs[2]*bx*bz+qRhs[6]*bz-2*qRhs[1]*bz-36*qRhs[8]*bx*by*by4+36*qRhs[6]*bx*by*by4-36*qRhs[1]*bx*by*by4-36*qRhs[7]*by*by4-36*qRhs[5]*bx2*by4+180*qRhs[3]*bx2*by4-36*qRhs[0]*bx2*by4-36*qRhs[4]*bx*by4+36*qRhs[3]*by4-18*qRhs[8]*bx3*by3-36*qRhs[6]*bx3*by3+198*qRhs[1]*bx3*by3-24*qRhs[9]*bx2*by3+36*qRhs[7]*bx2*by3-36*qRhs[2]*bx2*by3-40*qRhs[8]*bx*by3+13*qRhs[6]*bx*by3+14*qRhs[1]*bx*by3-13*qRhs[7]*by3-18*qRhs[5]*bx4*by2-72*qRhs[3]*bx4*by2+54*qRhs[0]*bx4*by2+162*qRhs[4]*bx3*by2-16*qRhs[5]*bx2*by2+83*qRhs[3]*bx2*by2+6*qRhs[0]*bx2*by2+14*qRhs[4]*bx*by2+13*qRhs[3]*by2+18*qRhs[8]*bx*bx4*by+18*qRhs[6]*bx*bx4*by-36*qRhs[1]*bx*bx4*by-24*qRhs[9]*bx4*by-18*qRhs[7]*bx4*by+54*qRhs[2]*bx4*by-4*qRhs[8]*bx3*by+qRhs[6]*bx3*by+14*qRhs[1]*bx3*by-6*qRhs[9]*bx2*by-qRhs[7]*bx2*by+6*qRhs[2]*bx2*by-4*qRhs[8]*bx*by+qRhs[6]*bx*by+2*qRhs[1]*bx*by-qRhs[7]*by+18*qRhs[5]*bx2*bx4+18*qRhs[3]*bx2*bx4+18*qRhs[4]*bx*bx4+20*qRhs[5]*bx4+29*qRhs[3]*bx4+20*qRhs[4]*bx3+2*qRhs[5]*bx2+12*qRhs[3]*bx2+2*qRhs[4]*bx+qRhs[3])/d;
  qOut[4] = (9*qRhs[7]*bz*bz4-9*qRhs[2]*bz*bz4+36*qRhs[9]*bx*by*bz4-54*qRhs[7]*bx*by*bz4-54*qRhs[2]*bx*by*bz4+18*qRhs[8]*by*bz4-3*qRhs[6]*by*bz4-9*qRhs[1]*by*bz4-18*qRhs[5]*bx*bz4+9*qRhs[3]*bx*bz4+3*qRhs[0]*bx*bz4+9*qRhs[4]*bz4+216*qRhs[8]*bx*by2*bz3-54*qRhs[6]*bx*by2*bz3-54*qRhs[1]*bx*by2*bz3-27*qRhs[9]*by2*bz3+81*qRhs[7]*by2*bz3+216*qRhs[5]*bx2*by*bz3-54*qRhs[3]*bx2*by*bz3-54*qRhs[0]*bx2*by*bz3+27*qRhs[5]*by*bz3-3*qRhs[3]*by*bz3-8*qRhs[0]*by*bz3+27*qRhs[9]*bx2*bz3-81*qRhs[2]*bx2*bz3+27*qRhs[8]*bx*bz3-8*qRhs[6]*bx*bz3-3*qRhs[1]*bx*bz3+10*qRhs[7]*bz3-10*qRhs[2]*bz3-54*qRhs[9]*bx*by3*bz2+216*qRhs[7]*bx*by3*bz2-54*qRhs[2]*bx*by3*bz2-81*qRhs[8]*by3*bz2+27*qRhs[6]*by3*bz2+540*qRhs[4]*bx2*by2*bz2-27*qRhs[5]*bx*by2*bz2+27*qRhs[3]*bx*by2*bz2+78*qRhs[4]*by2*bz2-54*qRhs[9]*bx3*by*bz2-54*qRhs[7]*bx3*by*bz2+216*qRhs[2]*bx3*by*bz2+27*qRhs[8]*bx2*by*bz2-27*qRhs[1]*bx2*by*bz2-14*qRhs[9]*bx*by*bz2+21*qRhs[7]*bx*by*bz2+21*qRhs[2]*bx*by*bz2-7*qRhs[8]*by*bz2+3*qRhs[6]*by*bz2-2*qRhs[1]*by*bz2+81*qRhs[5]*bx3*bz2-27*qRhs[0]*bx3*bz2+78*qRhs[4]*bx2*bz2+7*qRhs[5]*bx*bz2+2*qRhs[3]*bx*bz2-3*qRhs[0]*bx*bz2+10*qRhs[4]*bz2-54*qRhs[8]*bx*by4*bz+36*qRhs[6]*bx*by4*bz-54*qRhs[1]*bx*by4*bz+3*qRhs[9]*by4*bz-18*qRhs[7]*by4*bz+9*qRhs[2]*by4*bz-54*qRhs[5]*bx2*by3*bz+216*qRhs[3]*bx2*by3*bz-54*qRhs[0]*bx2*by3*bz-3*qRhs[5]*by3*bz+27*qRhs[3]*by3*bz-8*qRhs[0]*by3*bz-54*qRhs[8]*bx3*by2*bz-54*qRhs[6]*bx3*by2*bz+216*qRhs[1]*bx3*by2*bz-27*qRhs[7]*bx2*by2*bz+27*qRhs[2]*bx2*by2*bz+21*qRhs[8]*bx*by2*bz-14*qRhs[6]*bx*by2*bz+21*qRhs[1]*bx*by2*bz-3*qRhs[9]*by2*bz+7*qRhs[7]*by2*bz+2*qRhs[2]*by2*bz-54*qRhs[5]*bx4*by*bz-54*qRhs[3]*bx4*by*bz+36*qRhs[0]*bx4*by*bz+21*qRhs[5]*bx2*by*bz+21*qRhs[3]*bx2*by*bz-14*qRhs[0]*bx2*by*bz+3*qRhs[5]*by*bz+3*qRhs[3]*by*bz-2*qRhs[0]*by*bz-3*qRhs[9]*bx4*bz-9*qRhs[7]*bx4*bz+18*qRhs[2]*bx4*bz-3*qRhs[8]*bx3*bz-8*qRhs[6]*bx3*bz+27*qRhs[1]*bx3*bz+3*qRhs[9]*bx2*bz-2*qRhs[7]*bx2*bz-7*qRhs[2]*bx2*bz+3*qRhs[8]*bx*bz-2*qRhs[6]*bx*bz+3*qRhs[1]*bx*bz+qRhs[7]*bz-qRhs[2]*bz-9*qRhs[8]*by*by4+9*qRhs[1]*by*by4-9*qRhs[5]*bx*by4+18*qRhs[3]*bx*by4-3*qRhs[0]*bx*by4+9*qRhs[4]*by4-27*qRhs[6]*bx2*by3+81*qRhs[1]*bx2*by3-8*qRhs[9]*bx*by3+27*qRhs[7]*bx*by3-3*qRhs[2]*bx*by3-10*qRhs[8]*by3+10*qRhs[1]*by3-81*qRhs[3]*bx3*by2+27*qRhs[0]*bx3*by2+78*qRhs[4]*bx2*by2-2*qRhs[5]*bx*by2-7*qRhs[3]*bx*by2+3*qRhs[0]*bx*by2+10*qRhs[4]*by2+9*qRhs[8]*bx4*by+3*qRhs[6]*bx4*by-18*qRhs[1]*bx4*by-8*qRhs[9]*bx3*by-3*qRhs[7]*bx3*by+27*qRhs[2]*bx3*by+2*qRhs[8]*bx2*by-3*qRhs[6]*bx2*by+7*qRhs[1]*bx2*by-2*qRhs[9]*bx*by+3*qRhs[7]*bx*by+3*qRhs[2]*bx*by-qRhs[8]*by+qRhs[1]*by+9*qRhs[5]*bx*bx4-9*qRhs[3]*bx*bx4+9*qRhs[4]*bx4+10*qRhs[5]*bx3-10*qRhs[3]*bx3+10*qRhs[4]*bx2+qRhs[5]*bx-qRhs[3]*bx+qRhs[4])/d;
  qOut[5] = (36*qRhs[9]*bx*bz*bz4-36*qRhs[7]*bx*bz*bz4-36*qRhs[2]*bx*bz*bz4+36*qRhs[8]*bz*bz4+180*qRhs[8]*bx*by*bz4-36*qRhs[6]*bx*by*bz4-36*qRhs[1]*bx*by*bz4-36*qRhs[9]*by*bz4+54*qRhs[7]*by*bz4+18*qRhs[2]*by*bz4+180*qRhs[5]*bx2*bz4-36*qRhs[3]*bx2*bz4-36*qRhs[0]*bx2*bz4+36*qRhs[4]*bx*bz4+36*qRhs[5]*bz4-36*qRhs[9]*bx*by2*bz3+198*qRhs[7]*bx*by2*bz3-18*qRhs[2]*bx*by2*bz3-36*qRhs[8]*by2*bz3+30*qRhs[6]*by2*bz3+18*qRhs[1]*by2*bz3+432*qRhs[4]*bx2*by*bz3+18*qRhs[3]*bx*by*bz3-6*qRhs[0]*bx*by*bz3+54*qRhs[4]*by*bz3-36*qRhs[9]*bx3*bz3-18*qRhs[7]*bx3*bz3+198*qRhs[2]*bx3*bz3-36*qRhs[8]*bx2*bz3+24*qRhs[6]*bx2*bz3+36*qRhs[1]*bx2*bz3+13*qRhs[9]*bx*bz3-40*qRhs[7]*bx*bz3+14*qRhs[2]*bx*bz3+13*qRhs[8]*bz3-72*qRhs[8]*bx*by3*bz2+54*qRhs[6]*bx*by3*bz2-18*qRhs[1]*bx*by3*bz2-18*qRhs[9]*by3*bz2-36*qRhs[7]*by3*bz2+18*qRhs[2]*by3*bz2-72*qRhs[5]*bx2*by2*bz2+198*qRhs[3]*bx2*by2*bz2-18*qRhs[0]*bx2*by2*bz2+54*qRhs[4]*bx*by2*bz2+18*qRhs[5]*by2*bz2+30*qRhs[3]*by2*bz2+8*qRhs[0]*by2*bz2-72*qRhs[8]*bx3*by*bz2-18*qRhs[6]*bx3*by*bz2+198*qRhs[1]*bx3*by*bz2-18*qRhs[9]*bx2*by*bz2-144*qRhs[7]*bx2*by*bz2+126*qRhs[2]*bx2*by*bz2+65*qRhs[8]*bx*by*bz2-24*qRhs[6]*bx*by*bz2+20*qRhs[1]*bx*by*bz2-13*qRhs[9]*by*bz2+6*qRhs[7]*by*bz2+20*qRhs[2]*by*bz2-72*qRhs[5]*bx4*bz2-18*qRhs[3]*bx4*bz2+54*qRhs[0]*bx4*bz2-162*qRhs[4]*bx3*bz2+83*qRhs[5]*bx2*bz2-16*qRhs[3]*bx2*bz2+6*qRhs[0]*bx2*bz2-14*qRhs[4]*bx*bz2+13*qRhs[5]*bz2+18*qRhs[9]*bx*by4*bz-36*qRhs[7]*bx*by4*bz+18*qRhs[2]*bx*by4*bz+18*qRhs[8]*by4*bz+18*qRhs[1]*by4*bz-108*qRhs[4]*bx2*by3*bz+18*qRhs[3]*bx*by3*bz-6*qRhs[0]*bx*by3*bz-6*qRhs[4]*by3*bz+36*qRhs[9]*bx3*by2*bz-18*qRhs[7]*bx3*by2*bz-18*qRhs[2]*bx3*by2*bz+36*qRhs[8]*bx2*by2*bz-36*qRhs[6]*bx2*by2*bz+144*qRhs[1]*bx2*by2*bz+qRhs[9]*bx*by2*bz+20*qRhs[7]*bx*by2*bz-10*qRhs[2]*bx*by2*bz+qRhs[8]*by2*bz+12*qRhs[1]*by2*bz-108*qRhs[4]*bx4*by*bz-162*qRhs[3]*bx3*by*bz+54*qRhs[0]*bx3*by*bz+42*qRhs[4]*bx2*by*bz-18*qRhs[3]*bx*by*bz+6*qRhs[0]*bx*by*bz+6*qRhs[4]*by*bz+18*qRhs[9]*bx*bx4*bz+18*qRhs[7]*bx*bx4*bz-36*qRhs[2]*bx*bx4*bz+18*qRhs[8]*bx4*bz+24*qRhs[6]*bx4*bz-54*qRhs[1]*bx4*bz+qRhs[9]*bx3*bz-4*qRhs[7]*bx3*bz+14*qRhs[2]*bx3*bz+qRhs[8]*bx2*bz+6*qRhs[6]*bx2*bz-6*qRhs[1]*bx2*bz+qRhs[9]*bx*bz-4*qRhs[7]*bx*bz+2*qRhs[2]*bx*bz+qRhs[8]*bz+18*qRhs[8]*bx*by*by4+18*qRhs[1]*bx*by*by4-12*qRhs[9]*by*by4+18*qRhs[5]*bx2*by4-36*qRhs[3]*bx2*by4+18*qRhs[0]*bx2*by4+18*qRhs[4]*bx*by4+12*qRhs[5]*by4+8*qRhs[0]*by4+36*qRhs[8]*bx3*by3+18*qRhs[6]*bx3*by3-18*qRhs[1]*bx3*by3-24*qRhs[9]*bx2*by3-18*qRhs[7]*bx2*by3+18*qRhs[2]*bx2*by3+17*qRhs[8]*bx*by3-4*qRhs[1]*bx*by3-7*qRhs[9]*by3+8*qRhs[2]*by3+36*qRhs[5]*bx4*by2-18*qRhs[3]*bx4*by2+18*qRhs[0]*bx4*by2+41*qRhs[5]*bx2*by2-16*qRhs[3]*bx2*by2+20*qRhs[0]*bx2*by2+4*qRhs[4]*bx*by2+7*qRhs[5]*by2+2*qRhs[0]*by2+18*qRhs[8]*bx*bx4*by+18*qRhs[6]*bx*bx4*by-36*qRhs[1]*bx*bx4*by-12*qRhs[9]*bx4*by-18*qRhs[7]*bx4*by+18*qRhs[2]*bx4*by+17*qRhs[8]*bx3*by+12*qRhs[6]*bx3*by-40*qRhs[1]*bx3*by-7*qRhs[9]*bx2*by-12*qRhs[7]*bx2*by+20*qRhs[2]*bx2*by+5*qRhs[8]*bx*by-4*qRhs[1]*bx*by-qRhs[9]*by+2*qRhs[2]*by+18*qRhs[5]*bx2*bx4+18*qRhs[3]*bx2*bx4-18*qRhs[4]*bx*bx4+29*qRhs[5]*bx4+20*qRhs[3]*bx4-20*qRhs[4]*bx3+12*qRhs[5]*bx2+2*qRhs[3]*bx2-2*qRhs[4]*bx+qRhs[5])/d;
  qOut[6] = (54*qRhs[7]*by*bz*bz4+54*qRhs[2]*by*bz*bz4-36*qRhs[3]*bz*bz4-24*qRhs[0]*bz*bz4-108*qRhs[8]*by2*bz4+54*qRhs[6]*by2*bz4+54*qRhs[1]*by2*bz4-108*qRhs[5]*bx*by*bz4+54*qRhs[3]*bx*by*bz4+54*qRhs[0]*bx*by*bz4+18*qRhs[4]*by*bz4+36*qRhs[7]*bx*bz4+72*qRhs[2]*bx*bz4+28*qRhs[6]*bz4+24*qRhs[1]*bz4+90*qRhs[9]*by3*bz3-108*qRhs[7]*by3*bz3+54*qRhs[2]*by3*bz3-324*qRhs[4]*bx*by2*bz3-90*qRhs[5]*by2*bz3-54*qRhs[3]*by2*bz3-24*qRhs[0]*by2*bz3+54*qRhs[9]*bx2*by*bz3+108*qRhs[7]*bx2*by*bz3-54*qRhs[2]*bx2*by*bz3-18*qRhs[8]*bx*by*bz3+18*qRhs[1]*bx*by*bz3+3*qRhs[7]*by*bz3+36*qRhs[2]*by*bz3-72*qRhs[5]*bx2*bz3-72*qRhs[3]*bx2*bz3-24*qRhs[0]*bx2*bz3-48*qRhs[4]*bx*bz3-21*qRhs[3]*bz3-6*qRhs[0]*bz3+162*qRhs[8]*by4*bz2+54*qRhs[1]*by4*bz2+162*qRhs[5]*bx*by3*bz2-108*qRhs[3]*bx*by3*bz2+54*qRhs[0]*bx*by3*bz2-162*qRhs[4]*by3*bz2-54*qRhs[8]*bx2*by2*bz2+108*qRhs[6]*bx2*by2*bz2-54*qRhs[1]*bx2*by2*bz2+90*qRhs[9]*bx*by2*bz2+54*qRhs[7]*bx*by2*bz2-108*qRhs[2]*bx*by2*bz2+18*qRhs[8]*by2*bz2+59*qRhs[6]*by2*bz2+60*qRhs[1]*by2*bz2-54*qRhs[5]*bx3*by*bz2+108*qRhs[3]*bx3*by*bz2+54*qRhs[0]*bx3*by*bz2-72*qRhs[5]*bx*by*bz2+3*qRhs[3]*bx*by*bz2+36*qRhs[0]*bx*by*bz2-18*qRhs[4]*by*bz2+24*qRhs[9]*bx3*bz2+72*qRhs[7]*bx3*bz2+72*qRhs[2]*bx3*bz2+24*qRhs[8]*bx2*bz2+56*qRhs[6]*bx2*bz2+24*qRhs[1]*bx2*bz2+21*qRhs[7]*bx*bz2+18*qRhs[2]*bx*bz2+11*qRhs[6]*bz2+6*qRhs[1]*bz2+108*qRhs[7]*by*by4*bz+216*qRhs[4]*bx*by4*bz-108*qRhs[3]*by4*bz+54*qRhs[9]*bx2*by3*bz-108*qRhs[7]*bx2*by3*bz+162*qRhs[2]*bx2*by3*bz+162*qRhs[8]*bx*by3*bz-162*qRhs[1]*bx*by3*bz+39*qRhs[7]*by3*bz-324*qRhs[4]*bx3*by2*bz+108*qRhs[5]*bx2*by2*bz-54*qRhs[3]*bx2*by2*bz-90*qRhs[0]*bx2*by2*bz-84*qRhs[4]*bx*by2*bz-39*qRhs[3]*by2*bz+54*qRhs[9]*bx4*by*bz+54*qRhs[7]*bx4*by*bz-108*qRhs[2]*bx4*by*bz-18*qRhs[8]*bx3*by*bz+18*qRhs[1]*bx3*by*bz+36*qRhs[9]*bx2*by*bz+3*qRhs[7]*bx2*by*bz-72*qRhs[2]*bx2*by*bz+18*qRhs[8]*bx*by*bz-18*qRhs[1]*bx*by*bz+3*qRhs[7]*by*bz-72*qRhs[5]*bx4*bz-36*qRhs[3]*bx4*bz-48*qRhs[4]*bx3*bz-18*qRhs[5]*bx2*bz-21*qRhs[3]*bx2*bz-12*qRhs[4]*bx*bz-3*qRhs[3]*bz+36*qRhs[6]*by2*by4+108*qRhs[3]*bx*by*by4+54*qRhs[8]*bx2*by4+162*qRhs[1]*bx2*by4+108*qRhs[7]*bx*by4+49*qRhs[6]*by4+54*qRhs[5]*bx3*by3-108*qRhs[3]*bx3*by3+90*qRhs[0]*bx3*by3+162*qRhs[4]*bx2*by3+39*qRhs[3]*bx*by3+54*qRhs[8]*bx4*by2+54*qRhs[6]*bx4*by2-108*qRhs[1]*bx4*by2+24*qRhs[9]*bx3*by2+54*qRhs[7]*bx3*by2+90*qRhs[2]*bx3*by2+60*qRhs[8]*bx2*by2+59*qRhs[6]*bx2*by2+18*qRhs[1]*bx2*by2+39*qRhs[7]*bx*by2+14*qRhs[6]*by2+54*qRhs[5]*bx*bx4*by+54*qRhs[3]*bx*bx4*by-18*qRhs[4]*bx4*by+36*qRhs[5]*bx3*by+3*qRhs[3]*bx3*by+18*qRhs[4]*bx2*by+3*qRhs[3]*bx*by+24*qRhs[9]*bx*bx4+36*qRhs[7]*bx*bx4+24*qRhs[8]*bx4+28*qRhs[6]*bx4+6*qRhs[9]*bx3+21*qRhs[7]*bx3+6*qRhs[8]*bx2+11*qRhs[6]*bx2+3*qRhs[7]*bx+qRhs[6])/d;
  qOut[7] = (18*qRhs[7]*bz2*bz4+18*qRhs[2]*bz2*bz4-36*qRhs[8]*by*bz*bz4+18*qRhs[6]*by*bz*bz4+18*qRhs[1]*by*bz*bz4-36*qRhs[5]*bx*bz*bz4+18*qRhs[3]*bx*bz*bz4+18*qRhs[0]*bx*bz*bz4-18*qRhs[4]*bz*bz4+54*qRhs[9]*by2*bz4-72*qRhs[7]*by2*bz4-18*qRhs[2]*by2*bz4-108*qRhs[4]*bx*by*bz4-54*qRhs[5]*by*bz4+18*qRhs[3]*by*bz4+24*qRhs[0]*by*bz4+18*qRhs[9]*bx2*bz4+36*qRhs[7]*bx2*bz4-18*qRhs[2]*bx2*bz4+18*qRhs[8]*bx*bz4-12*qRhs[6]*bx*bz4-18*qRhs[1]*bx*bz4+29*qRhs[7]*bz4+20*qRhs[2]*bz4+198*qRhs[8]*by3*bz3-36*qRhs[6]*by3*bz3-18*qRhs[1]*by3*bz3+198*qRhs[5]*bx*by2*bz3-72*qRhs[3]*bx*by2*bz3-18*qRhs[0]*bx*by2*bz3-162*qRhs[4]*by2*bz3-18*qRhs[8]*bx2*by*bz3+36*qRhs[6]*bx2*by*bz3-18*qRhs[1]*bx2*by*bz3+54*qRhs[9]*bx*by*bz3-162*qRhs[2]*bx*by*bz3+14*qRhs[8]*by*bz3+qRhs[6]*by*bz3-4*qRhs[1]*by*bz3-18*qRhs[5]*bx3*bz3+36*qRhs[3]*bx3*bz3+18*qRhs[0]*bx3*bz3-40*qRhs[5]*bx*bz3+17*qRhs[3]*bx*bz3+12*qRhs[0]*bx*bz3-20*qRhs[4]*bz3-36*qRhs[9]*by4*bz2+180*qRhs[7]*by4*bz2-36*qRhs[2]*by4*bz2+432*qRhs[4]*bx*by3*bz2+36*qRhs[5]*by3*bz2-36*qRhs[3]*by3*bz2+24*qRhs[0]*by3*bz2-18*qRhs[9]*bx2*by2*bz2-72*qRhs[7]*bx2*by2*bz2+198*qRhs[2]*bx2*by2*bz2+126*qRhs[8]*bx*by2*bz2-18*qRhs[6]*bx*by2*bz2-144*qRhs[1]*bx*by2*bz2+6*qRhs[9]*by2*bz2+83*qRhs[7]*by2*bz2-16*qRhs[2]*by2*bz2-108*qRhs[4]*bx3*by*bz2+144*qRhs[5]*bx2*by*bz2+36*qRhs[3]*bx2*by*bz2-36*qRhs[0]*bx2*by*bz2+42*qRhs[4]*bx*by*bz2-6*qRhs[5]*by*bz2+qRhs[3]*by*bz2+6*qRhs[0]*by*bz2+18*qRhs[9]*bx4*bz2+18*qRhs[7]*bx4*bz2-36*qRhs[2]*bx4*bz2+18*qRhs[8]*bx3*bz2-24*qRhs[6]*bx3*bz2-18*qRhs[1]*bx3*bz2+20*qRhs[9]*bx2*bz2+41*qRhs[7]*bx2*bz2-16*qRhs[2]*bx2*bz2+20*qRhs[8]*bx*bz2-7*qRhs[6]*bx*bz2-12*qRhs[1]*bx*bz2+12*qRhs[7]*bz2+2*qRhs[2]*bz2-36*qRhs[8]*by*by4*bz+36*qRhs[6]*by*by4*bz-36*qRhs[1]*by*by4*bz-36*qRhs[5]*bx*by4*bz+180*qRhs[3]*bx*by4*bz-36*qRhs[0]*bx*by4*bz+36*qRhs[4]*by4*bz-18*qRhs[8]*bx2*by3*bz-36*qRhs[6]*bx2*by3*bz+198*qRhs[1]*bx2*by3*bz-6*qRhs[9]*bx*by3*bz+18*qRhs[2]*bx*by3*bz+14*qRhs[8]*by3*bz+13*qRhs[6]*by3*bz-40*qRhs[1]*by3*bz-18*qRhs[5]*bx3*by2*bz-72*qRhs[3]*bx3*by2*bz+54*qRhs[0]*bx3*by2*bz+54*qRhs[4]*bx2*by2*bz+20*qRhs[5]*bx*by2*bz+65*qRhs[3]*bx*by2*bz-24*qRhs[0]*bx*by2*bz-14*qRhs[4]*by2*bz+18*qRhs[8]*bx4*by*bz+18*qRhs[6]*bx4*by*bz-36*qRhs[1]*bx4*by*bz-6*qRhs[9]*bx3*by*bz+18*qRhs[2]*bx3*by*bz-10*qRhs[8]*bx2*by*bz+qRhs[6]*bx2*by*bz+20*qRhs[1]*bx2*by*bz+6*qRhs[9]*bx*by*bz-18*qRhs[2]*bx*by*bz+2*qRhs[8]*by*bz+qRhs[6]*by*bz-4*qRhs[1]*by*bz+18*qRhs[5]*bx*bx4*bz+18*qRhs[3]*bx*bx4*bz+18*qRhs[4]*bx4*bz-4*qRhs[5]*bx3*bz+17*qRhs[3]*bx3*bz+4*qRhs[4]*bx2*bz-4*qRhs[5]*bx*bz+5*qRhs[3]*bx*bz-2*qRhs[4]*bz+36*qRhs[3]*by*by4+18*qRhs[8]*bx*by4-36*qRhs[6]*bx*by4+54*qRhs[1]*bx*by4+36*qRhs[7]*by4+18*qRhs[5]*bx2*by3-36*qRhs[3]*bx2*by3+30*qRhs[0]*bx2*by3+54*qRhs[4]*bx*by3+13*qRhs[3]*by3+18*qRhs[8]*bx3*by2-18*qRhs[6]*bx3*by2-36*qRhs[1]*bx3*by2+8*qRhs[9]*bx2*by2+18*qRhs[7]*bx2*by2+30*qRhs[2]*bx2*by2+20*qRhs[8]*bx*by2-13*qRhs[6]*bx*by2+6*qRhs[1]*bx*by2+13*qRhs[7]*by2+18*qRhs[5]*bx4*by+18*qRhs[3]*bx4*by-6*qRhs[4]*bx3*by+12*qRhs[5]*bx2*by+qRhs[3]*bx2*by+6*qRhs[4]*bx*by+qRhs[3]*by-12*qRhs[6]*bx*bx4+8*qRhs[9]*bx4+12*qRhs[7]*bx4+8*qRhs[8]*bx3-7*qRhs[6]*bx3+2*qRhs[9]*bx2+7*qRhs[7]*bx2+2*qRhs[8]*bx-qRhs[6]*bx+qRhs[7])/d;
  qOut[8] = (36*qRhs[9]*by*bz*bz4-36*qRhs[7]*by*bz*bz4-36*qRhs[2]*by*bz*bz4-36*qRhs[5]*bz*bz4+180*qRhs[8]*by2*bz4-36*qRhs[6]*by2*bz4-36*qRhs[1]*by2*bz4+180*qRhs[5]*bx*by*bz4-36*qRhs[3]*bx*by*bz4-36*qRhs[0]*bx*by*bz4-36*qRhs[4]*by*bz4+36*qRhs[9]*bx*bz4-18*qRhs[7]*bx*bz4-54*qRhs[2]*bx*bz4+36*qRhs[8]*bz4-36*qRhs[9]*by3*bz3+198*qRhs[7]*by3*bz3-18*qRhs[2]*by3*bz3+432*qRhs[4]*bx*by2*bz3+36*qRhs[5]*by2*bz3-36*qRhs[3]*by2*bz3-24*qRhs[0]*by2*bz3-36*qRhs[9]*bx2*by*bz3-18*qRhs[7]*bx2*by*bz3+198*qRhs[2]*bx2*by*bz3+6*qRhs[6]*bx*by*bz3-18*qRhs[1]*bx*by*bz3+13*qRhs[9]*by*bz3+14*qRhs[7]*by*bz3-40*qRhs[2]*by*bz3+36*qRhs[5]*bx2*bz3-18*qRhs[3]*bx2*bz3-30*qRhs[0]*bx2*bz3+54*qRhs[4]*bx*bz3-13*qRhs[5]*bz3-72*qRhs[8]*by4*bz2+54*qRhs[6]*by4*bz2-18*qRhs[1]*by4*bz2-72*qRhs[5]*bx*by3*bz2+198*qRhs[3]*bx*by3*bz2-18*qRhs[0]*bx*by3*bz2+162*qRhs[4]*by3*bz2-72*qRhs[8]*bx2*by2*bz2-18*qRhs[6]*bx2*by2*bz2+198*qRhs[1]*bx2*by2*bz2+18*qRhs[9]*bx*by2*bz2-126*qRhs[7]*bx*by2*bz2+144*qRhs[2]*bx*by2*bz2+83*qRhs[8]*by2*bz2+6*qRhs[6]*by2*bz2-16*qRhs[1]*by2*bz2-72*qRhs[5]*bx3*by*bz2-18*qRhs[3]*bx3*by*bz2+54*qRhs[0]*bx3*by*bz2-54*qRhs[4]*bx2*by*bz2+65*qRhs[5]*bx*by*bz2+20*qRhs[3]*bx*by*bz2-24*qRhs[0]*bx*by*bz2+14*qRhs[4]*by*bz2+18*qRhs[9]*bx3*bz2-18*qRhs[7]*bx3*bz2+36*qRhs[2]*bx3*bz2+18*qRhs[8]*bx2*bz2+8*qRhs[6]*bx2*bz2+30*qRhs[1]*bx2*bz2+13*qRhs[9]*bx*bz2-20*qRhs[7]*bx*bz2-6*qRhs[2]*bx*bz2+13*qRhs[8]*bz2+18*qRhs[9]*by*by4*bz-36*qRhs[7]*by*by4*bz+18*qRhs[2]*by*by4*bz-108*qRhs[4]*bx*by4*bz-18*qRhs[5]*by4*bz+54*qRhs[3]*by4*bz-24*qRhs[0]*by4*bz+36*qRhs[9]*bx2*by3*bz-18*qRhs[7]*bx2*by3*bz-18*qRhs[2]*bx2*by3*bz-54*qRhs[6]*bx*by3*bz+162*qRhs[1]*bx*by3*bz+qRhs[9]*by3*bz+14*qRhs[7]*by3*bz-4*qRhs[2]*by3*bz-108*qRhs[4]*bx3*by2*bz-36*qRhs[5]*bx2*by2*bz-144*qRhs[3]*bx2*by2*bz+36*qRhs[0]*bx2*by2*bz+42*qRhs[4]*bx*by2*bz-qRhs[5]*by2*bz+6*qRhs[3]*by2*bz-6*qRhs[0]*by2*bz+18*qRhs[9]*bx4*by*bz+18*qRhs[7]*bx4*by*bz-36*qRhs[2]*bx4*by*bz+6*qRhs[6]*bx3*by*bz-18*qRhs[1]*bx3*by*bz+qRhs[9]*bx2*by*bz-10*qRhs[7]*bx2*by*bz+20*qRhs[2]*bx2*by*bz-6*qRhs[6]*bx*by*bz+18*qRhs[1]*bx*by*bz+qRhs[9]*by*bz+2*qRhs[7]*by*bz-4*qRhs[2]*by*bz-18*qRhs[5]*bx4*bz-18*qRhs[3]*bx4*bz-6*qRhs[4]*bx3*bz-qRhs[5]*bx2*bz-12*qRhs[3]*bx2*bz+6*qRhs[4]*bx*bz-qRhs[5]*bz+18*qRhs[8]*by2*by4+18*qRhs[1]*by2*by4+18*qRhs[5]*bx*by*by4-36*qRhs[3]*bx*by*by4+18*qRhs[0]*bx*by*by4+18*qRhs[4]*by*by4+36*qRhs[8]*bx2*by4+18*qRhs[6]*bx2*by4-18*qRhs[1]*bx2*by4+12*qRhs[9]*bx*by4-18*qRhs[7]*bx*by4+18*qRhs[2]*bx*by4+29*qRhs[8]*by4+20*qRhs[1]*by4+36*qRhs[5]*bx3*by3-18*qRhs[3]*bx3*by3+18*qRhs[0]*bx3*by3+17*qRhs[5]*bx*by3-40*qRhs[3]*bx*by3+12*qRhs[0]*bx*by3+20*qRhs[4]*by3+18*qRhs[8]*bx4*by2+18*qRhs[6]*bx4*by2-36*qRhs[1]*bx4*by2+24*qRhs[9]*bx3*by2-18*qRhs[7]*bx3*by2+18*qRhs[2]*bx3*by2+41*qRhs[8]*bx2*by2+20*qRhs[6]*bx2*by2-16*qRhs[1]*bx2*by2+7*qRhs[9]*bx*by2-20*qRhs[7]*bx*by2+12*qRhs[2]*bx*by2+12*qRhs[8]*by2+2*qRhs[1]*by2+18*qRhs[5]*bx*bx4*by+18*qRhs[3]*bx*bx4*by-18*qRhs[4]*bx4*by+17*qRhs[5]*bx3*by-4*qRhs[3]*bx3*by-4*qRhs[4]*bx2*by+5*qRhs[5]*bx*by-4*qRhs[3]*bx*by+2*qRhs[4]*by+12*qRhs[9]*bx*bx4+12*qRhs[8]*bx4+8*qRhs[6]*bx4+7*qRhs[9]*bx3-8*qRhs[7]*bx3+7*qRhs[8]*bx2+2*qRhs[6]*bx2+qRhs[9]*bx-2*qRhs[7]*bx+qRhs[8])/d;
  qOut[9] = (36*qRhs[9]*bz2*bz4+108*qRhs[8]*by*bz*bz4+108*qRhs[5]*bx*bz*bz4+162*qRhs[7]*by2*bz4+54*qRhs[2]*by2*bz4+216*qRhs[4]*bx*by*bz4+108*qRhs[5]*by*bz4+54*qRhs[7]*bx2*bz4+162*qRhs[2]*bx2*bz4-108*qRhs[8]*bx*bz4+49*qRhs[9]*bz4-108*qRhs[8]*by3*bz3+90*qRhs[6]*by3*bz3+54*qRhs[1]*by3*bz3-108*qRhs[5]*bx*by2*bz3+162*qRhs[3]*bx*by2*bz3+54*qRhs[0]*bx*by2*bz3+162*qRhs[4]*by2*bz3-108*qRhs[8]*bx2*by*bz3+54*qRhs[6]*bx2*by*bz3+162*qRhs[1]*bx2*by*bz3-162*qRhs[7]*bx*by*bz3+162*qRhs[2]*bx*by*bz3+39*qRhs[8]*by*bz3-108*qRhs[5]*bx3*bz3+54*qRhs[3]*bx3*bz3+90*qRhs[0]*bx3*bz3-162*qRhs[4]*bx2*bz3+39*qRhs[5]*bx*bz3+54*qRhs[9]*by4*bz2-108*qRhs[7]*by4*bz2+54*qRhs[2]*by4*bz2-324*qRhs[4]*bx*by3*bz2+54*qRhs[5]*by3*bz2+90*qRhs[3]*by3*bz2+24*qRhs[0]*by3*bz2+108*qRhs[9]*bx2*by2*bz2-54*qRhs[7]*bx2*by2*bz2-54*qRhs[2]*bx2*by2*bz2-54*qRhs[8]*bx*by2*bz2-90*qRhs[6]*bx*by2*bz2+108*qRhs[1]*bx*by2*bz2+59*qRhs[9]*by2*bz2+18*qRhs[7]*by2*bz2+60*qRhs[2]*by2*bz2-324*qRhs[4]*bx3*by*bz2+54*qRhs[5]*bx2*by*bz2-108*qRhs[3]*bx2*by*bz2+90*qRhs[0]*bx2*by*bz2-84*qRhs[4]*bx*by*bz2+39*qRhs[5]*by*bz2+54*qRhs[9]*bx4*bz2+54*qRhs[7]*bx4*bz2-108*qRhs[2]*bx4*bz2-54*qRhs[8]*bx3*bz2-24*qRhs[6]*bx3*bz2-90*qRhs[1]*bx3*bz2+59*qRhs[9]*bx2*bz2+60*qRhs[7]*bx2*bz2+18*qRhs[2]*bx2*bz2-39*qRhs[8]*bx*bz2+14*qRhs[9]*bz2+54*qRhs[8]*by*by4*bz+54*qRhs[1]*by*by4*bz+54*qRhs[5]*bx*by4*bz-108*qRhs[3]*bx*by4*bz+54*qRhs[0]*bx*by4*bz-18*qRhs[4]*by4*bz+108*qRhs[8]*bx2*by3*bz+54*qRhs[6]*bx2*by3*bz-54*qRhs[1]*bx2*by3*bz+18*qRhs[7]*bx*by3*bz-18*qRhs[2]*bx*by3*bz+3*qRhs[8]*by3*bz+36*qRhs[1]*by3*bz+108*qRhs[5]*bx3*by2*bz-54*qRhs[3]*bx3*by2*bz+54*qRhs[0]*bx3*by2*bz+3*qRhs[5]*bx*by2*bz-72*qRhs[3]*bx*by2*bz+36*qRhs[0]*bx*by2*bz+18*qRhs[4]*by2*bz+54*qRhs[8]*bx4*by*bz+54*qRhs[6]*bx4*by*bz-108*qRhs[1]*bx4*by*bz+18*qRhs[7]*bx3*by*bz-18*qRhs[2]*bx3*by*bz+3*qRhs[8]*bx2*by*bz+36*qRhs[6]*bx2*by*bz-72*qRhs[1]*bx2*by*bz-18*qRhs[7]*bx*by*bz+18*qRhs[2]*bx*by*bz+3*qRhs[8]*by*bz+54*qRhs[5]*bx*bx4*bz+54*qRhs[3]*bx*bx4*bz+18*qRhs[4]*bx4*bz+3*qRhs[5]*bx3*bz+36*qRhs[3]*bx3*bz-18*qRhs[4]*bx2*bz+3*qRhs[5]*bx*bz+36*qRhs[5]*by*by4+24*qRhs[0]*by*by4-36*qRhs[8]*bx*by4-72*qRhs[1]*bx*by4+28*qRhs[9]*by4+24*qRhs[2]*by4+72*qRhs[5]*bx2*by3+72*qRhs[3]*bx2*by3+24*qRhs[0]*bx2*by3-48*qRhs[4]*bx*by3+21*qRhs[5]*by3+6*qRhs[0]*by3-72*qRhs[8]*bx3*by2-24*qRhs[6]*bx3*by2-72*qRhs[1]*bx3*by2+56*qRhs[9]*bx2*by2+24*qRhs[7]*bx2*by2+24*qRhs[2]*bx2*by2-21*qRhs[8]*bx*by2-18*qRhs[1]*bx*by2+11*qRhs[9]*by2+6*qRhs[2]*by2+36*qRhs[5]*bx4*by+72*qRhs[3]*bx4*by-48*qRhs[4]*bx3*by+21*qRhs[5]*bx2*by+18*qRhs[3]*bx2*by-12*qRhs[4]*bx*by+3*qRhs[5]*by-36*qRhs[8]*bx*bx4-24*qRhs[6]*bx*bx4+28*qRhs[9]*bx4+24*qRhs[7]*bx4-21*qRhs[8]*bx3-6*qRhs[6]*bx3+11*qRhs[9]*bx2+6*qRhs[7]*bx2-3*qRhs[8]*bx+qRhs[9])/d;
}
